<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order"  value="2" />
	</beans:bean>
	
	<!-- Bean으로 만들 대상을 검색할 위치 -->
	<!-- base-package에 기술한 경로에 빈(@~~)으로 등록할 클래스를 찾을 수가 있다 -->
	<context:component-scan base-package="com.edu.exam" />
	<context:component-scan base-package="com.edu.exam2" />
	<context:component-scan base-package="com.edu.member" />
	<context:component-scan base-package="com.edu.member.controller" />
	<context:component-scan base-package="com.edu.manager"/>
	<context:component-scan base-package="com.edu.manager.controller"/>
	<context:component-scan base-package="com.edu.goods"/>
	<context:component-scan base-package="com.edu.goods.controller"/>
	<context:component-scan base-package="com.edu.basic"/>
	<context:component-scan base-package="com.edu.basic.controller"/>
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles/*.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="1"/>
	</beans:bean>
	
	
	<!-- 인터셉터 설정 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*/*.do"/>
			<mvc:mapping path="/*/*/*.do"/>
			<beans:bean class="com.edu.common.interceptor.ViewNameInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 파일 업로드 관련 설정 -->
	<!-- 스프링프레임웍에 내장된 CommonsMultipartResolver를 등록한다. -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일업로드 최대 용량(byte) -->
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	<!-- 파일업로드를 위한 디렉토리 설정 -->
	<!-- String uploadPath=new String("c:/upload"); -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="c:/data/upload" />
	</beans:bean>
	


	
	
</beans:beans>




